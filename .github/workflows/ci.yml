name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
  FASTLANE_SKIP_UPDATE_CHECK: true
  FASTLANE_XCODE_LIST_TIMEOUT: 60
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60
  HOMEBREW_NO_INSTALL_CLEANUP: TRUE
  BUNDLE_PATH: vendor/bundle

jobs:
  SwiftLint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: "Cache: Pods"
        id: cache_pods
        with:
          path: Pods
          key: ${{ runner.os }}-lint-pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Install Pods
        if: steps.cache_pods.outputs.cache-hit != 'true'
        run: |
          bundle install
          ONLY_SUPPORT_MODULES=1 bundle exec pod install --repo-update

      - name: SwiftLint
        run: Pods/SwiftLint/swiftlint lint --strict --config .swiftlint.yml --reporter github-actions-logging

  test:
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2

    ## copied everywhere - dependencies restore

    - uses: actions/cache@v2
      name: "Cache: Pods"
      id: cache_pods
      with:
        path: |
          Pods
          Tools/MaterialDesignIcons.ttf
          Tools/MaterialDesignIcons.json
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock', 'Tools/BuildMaterialDesignIconsFont.sh') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - uses: actions/cache@v2
      name: "Cache: Gems"
      id: cache_gems
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ env.DEVELOPER_DIR }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ env.DEVELOPER_DIR }}

    - name: Install Brews
      # right now, we don't need anything from brew for tests, so save some time
      if: ${{ never() }}
      run: brew bundle

    - name: Install Gems
      if: steps.cache_gems.outputs.cache-hit != 'true'
      run: bundle install --jobs 4 --retry 3

    - name: Install Pods
      if: steps.cache_pods.outputs.cache-hit != 'true'
      run: bundle exec pod install --repo-update

    ## end copied everywhere - dependencies restore

    - name: Run tests
      run: bundle exec fastlane test

    - uses: codecov/codecov-action@v1
      name: "Upload Code Coverage"

    - uses: actions/upload-artifact@v2
      name: "Upload Test Logs"
      if: ${{ always() }}
      with:
        name: test-logs
        path: |
          ~/Library/Logs/DiagnosticReports
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Logs/Test
          ~/Library/Logs/scan
