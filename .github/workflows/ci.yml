name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - beta

env:
  FASTLANE_SKIP_UPDATE_CHECK: true
  FASTLANE_XCODE_LIST_TIMEOUT: 30
  MATCH_KEYCHAIN_NAME: "gh_actions"

jobs:
  SwiftLint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: SwiftLint
        uses: norio-nomura/action-swiftlint@3.1.0
        env:
          DIFF_BASE: ${{ github.base_ref }}

  test:
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.2.app/Contents/Developer
    steps:
    - name: "Xcode 12 CoreNFC Workaround"
      # FB8697856 - works around Xcode 12 unable to link with CoreNFC in simulator
      run: |
        pushd /tmp
        curl -LO https://github.com/home-assistant/iOS/files/5285110/libnfshared.dylib.zip
        unzip libnfshared.dylib.zip
        cp -f libnfshared.dylib /Applications/Xcode_12.2.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime/Contents/Resources/RuntimeRoot/usr/lib/libnfshared.dylib 
        cp -f libnfshared.dylib /Applications/Xcode_12.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime/Contents/Resources/RuntimeRoot/usr/lib/libnfshared.dylib 

    - name: "Xcode 12 Git Workaround"
      # FB8742330 - works around Xcode 12's built-in git having issues cloning without getting curl errors
      run: |
        ln -sf $(which git) /Applications/Xcode_12.2.app/Contents/Developer/usr/bin/git

    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      name: "Cache: Pods"
      with:
        path: |
          Pods
          Tools/MaterialDesignIcons.ttf
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock', 'Tools/BuildMaterialDesignIconsFont.sh') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - uses: actions/cache@v2
      name: "Cache: Gems"
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - uses: actions/cache@v2
      name: "Cache: Swift Package Manager"
      with:
        path: ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/SourcePackages/
        key: ${{ runner.os }}-spm-${{ hashFiles('HomeAssistant.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - uses: actions/cache@v2
      name: "Cache: Expensive Dependencies"
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Build/Intermediates.noindex/Realm*
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Build/Intermediates.noindex/Sodium*
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Build/Products/*/Realm*
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Build/Products/*/Firebase*
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Build/Products/*/Sodium*
        key: ${{ runner.os }}-expensive-dependencies-${{ hashFiles('**/Podfile.lock', 'HomeAssistant.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-expensive-dependencies-

    - name: Install Gems
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Install Pods
      run: diff Pods/Manifest.lock Podfile.lock >/dev/null || bundle exec pod install --repo-update

    - name: Run tests
      # retry in case a build failure happens. at the time of writing, Clibsodium via SPM will occasionally fail on first build
      # because it cannot find the Clibsodium xcframework due to some internal-to-Xcode race condition
      run: bundle exec fastlane ios test || bundle exec fastlane ios test

    - uses: actions/upload-artifact@v2
      name: "Upload Test Logs"
      if: ${{ always() }}
      with:
        name: test-logs
        path: |
          ~/Library/Logs/DiagnosticReports
          ~/Library/Developer/Xcode/DerivedData/HomeAssistant-*/Logs/Test
          ~/Library/Logs/scan
